name: hprofile-Actions
on: workflow_dispatch 
# on: [push , workflow_dispatch]
env: 
  AWS_REGION: us-west-1
  ECR_REPO:  vpro-act
jobs:
   Testing:
      runs-on: ubuntu-latest
      steps: 
        - name: code checkout  
          uses: actions/checkout@v4

        - name: maven test
          run: mvn test

        - name: checkstyle
          run: mvn checkstyle:checkstyle 

        - uses: actions/setup-java@v3
          with:
            distribution: 'temurin' 
            java-version: '17'

              # Setup sonar-scanner
        - name: Setup SonarQube
          uses: warchant/setup-sonar-scanner@v7

            # Run sonar-scanner
        - name: SonarQube Scan
          run: |
              sonar-scanner \
                -Dsonar.host.url=${{ secrets.SONAR_URL }} \
                -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
                -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
                -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
                -Dsonar.sources=src/ \
                -Dsonar.junit.reportsPath=target/surefire-reports/ \
                -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml \
                -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/

                    # Check the Quality Gate status.
        - name: SonarQube Quality Gate check
          id: sonarqube-quality-gate-check
          uses: sonarsource/sonarqube-quality-gate-action@master
            # Force to fail step after specific time.
          timeout-minutes: 5
          env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              SONAR_HOST_URL: ${{ secrets.SONAR_URL }}     

             #build and publish on ECR           
   BUILD_AND_PUBPLISH:
          needs: Testing 
          runs-on: ubuntu-latest
          steps:
            - name: code checkout
              uses: actions/checkout@v4
                
            - name: update application.properties file 
              run: |
                sed -i "s/^jdbc.username.*$/jdbc.username\=${{secrets.RDS_USER}}/" src/main/resources/application.properties
                sed -i "s/^jdbc.password.*$/jdbc.password\=${{secrets.RDS_PASS}}/" src/main/resources/application.properties
                sed -i "s/db01/${{secrets.RDS_ENDPOINT}}/" src/main/resources/application.properties                 

            - name: upload image to ECR
              uses: appleboy/docker-ecr-action@master
              with:
                access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
                secret_key: ${{ secrets.AWS_SECRECT_ACCESS_KEY }}
                registry: ${{ secrets.REGISTRY}}
                repo: actapp
                region: ${{env.AWS_REGION}}
                tags: latest,${{github.run_number}}
                daemon_off: false
                dockerfile: ./Dockerfile
                context: ./          



   DEPLOY:
       needs: BUILD_AND_PUBPLISH 
       runs-on: ubuntu-latest
       steps:
        - name: code checkout
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{env.AWS_REGION}}
                     
                     # update task definition 
        - name: Fill in the new image ID in the Amazon ECS task definition
          id: task-def
          uses: aws-actions/amazon-ecs-render-task-definition@v1
          with:
            task-definition: aws-files/task-definition.json
            container-name: vproapp
            image: ${{secrets.REGISTRY}}/${{secrets.ECR_REPO}}:${{github.run_number}}
                
                # use updated task definition
        - name: Deploy Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v2
          with:
            task-definition: ${{ steps.task-def.outputs.task-definition }} 
            service: vpropp-svc
            cluster: vproapp-cluster
            wait-for-service-stability: true



